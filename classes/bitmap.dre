<!-- The MIT License (MIT)

Copyright ( c ) 2014-2015 Teem2 LLC

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. -->
<!--/**
    * @class dr.bitmap {UI Components}
    * @extends dr.view
    * Loads an image from a URL.
    *
    *     @example
    *     <bitmap src="../api-examples-resources/shasta.jpg" width="230" height="161"></bitmap>
    *
    * Stretch an image to fill the entire view.
    *     @example
    *     <bitmap src="../api-examples-resources/shasta.jpg" width="300" height="150" stretches="true"></bitmap>
    *
    */-->
<class name="bitmap" type="coffee">
  <!--/**
      * @attribute {String} [src='']
      * The URL of the bitmap file to load.
      */-->
  <!--/**
      * @event onload 
      * Fired when the bitmap is loaded
      * @param {Object} size An object containing the width and height
      */-->
  <!--/**
      * @event onerror 
      * Fired when there is an error loading the bitmap
      */-->
  <attribute name="src" type="string" value=""></attribute>
  <setter name="src" args="v">
    if @src isnt v
      @sprite.setSrc(v)
      @setAndFire('src', v)
    return dr._noop
  </setter>

  <!--/**
      * @attribute {String} [stretches=false]
      * How the image is scaled to the size of the view.
      * Supported values are 'true', 'false', 'scale'.
      * false will scale the image to completely fill the view, but may obscure parts of the image.
      * true will stretch the image to fit the view.
      * scale will scale the image so it visible within the view, but the image may not fill the entire view.
      */-->
  <attribute name="stretches" type="string" value="false"></attribute>
  <setter name="stretches" args="v">
    if @stretches isnt v
      @sprite.setStretches(v)
      @setAndFire('stretches', v)
    return dr._noop
  </setter>

  <!--/**
      * @attribute {Boolean} [naturalsize=false]
      * If set to true the bitmap will be sized to the width/height of the
      * bitmap data in pixels.
      */-->
  <attribute name="naturalsize" type="boolean" value="false"></attribute>
  <setter name="naturalsize" args="v">
    if @naturalsize isnt v
      @sprite.setNaturalSize(v)
      @setAndFire('naturalsize', v)
    return dr._noop
  </setter>

  <method name="createSprite" args="spriteClass, el, attributes">
    return @super(dr._bitmapSprite, el, attributes)
  </method>
</class>
